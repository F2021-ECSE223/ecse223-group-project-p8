package ca.mcgill.ecse.climbsafe.javafx.fxml.controllers;

import javafx.fxml.FXML;

import javafx.scene.control.Button;

import javafx.scene.control.TextField;

import static ca.mcgill.ecse.climbsafe.javafx.fxml.controllers.ViewUtils.successful;

import java.util.List;

import ca.mcgill.ecse.climbsafe.controller.ClimbSafeFeatureSet5Controller;
import ca.mcgill.ecse.climbsafe.controller.InvalidInputException;
import ca.mcgill.ecse.climbsafe.controller.Utility;
import ca.mcgill.ecse.climbsafe.model.ClimbSafe;
import ca.mcgill.ecse.climbsafe.model.Equipment;
import ca.mcgill.ecse.climbsafe.model.EquipmentBundle;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.Tab;

import javafx.scene.control.TableView;

import javafx.scene.control.ChoiceBox;

import javafx.scene.control.TableColumn;

public class equipmentBundlePageController {

	ClimbSafe climbSafe;

	// ChoiceBox Items
	ObservableList<String> equipmentList = FXCollections.observableArrayList();
	ObservableList<String> bundleEquipmentList = FXCollections.observableArrayList();
	ObservableList<String> bundlesList = FXCollections.observableArrayList();

	// Storing Items
	List<String> equipmentNamesCB;
	List<Integer> equipmentQuantitiesCB;

	@FXML
	private TextField bundleNameInput;
	@FXML
	private TableView<Equipment> bundleItemsTable;
	@FXML
	private TableColumn<Equipment, String> bundleEquipmentCB;
	@FXML
	private TableColumn<Equipment, Double> costCB;
	@FXML
	private TableColumn<Equipment, Double> weightCB;
	@FXML
	private TableColumn<Equipment, Integer> quantityCB;
	@FXML
	private ChoiceBox<String> equipmentMenuCB;
	@FXML
	private TextField equipmentQuantityInputCB;
	@FXML
	private Button addEquipmentToBundleButton;
	@FXML
	private Button createEquipmentBundleButton;
	@FXML
	private TextField guideDiscountCB;
	@FXML
	private Tab updateDiscountStatusMenu;
	@FXML
	private TextField newBundleNameInput;
	@FXML
	private TableColumn<Equipment, String> bundleEquipmentEB;
	@FXML
	private TableColumn<Equipment, Double> costEB;
	@FXML
	private TableColumn<Equipment, Double> weightEB;
	@FXML
	private TableColumn<Equipment, Integer> QuantityEB;
	@FXML
	private TextField equipmentQuantityInputEB;
	@FXML
	private Button updateEquipmentInBundleButton;
	@FXML
	private ChoiceBox<String> equipmentMenuEB;
	@FXML
	private ChoiceBox<String> selectBundleMenu;
	@FXML
	private Button updateEquipmentBundleButton;
	@FXML
	private TextField guideDiscountEB;

	// Create Bundle Methods

	@FXML
	public void initializeEquipmentMenuCB() {
		for (Equipment equipment : climbSafe.getEquipment()) {
			equipmentList.add(equipment.getName());
		}
		equipmentMenuCB.setItems(equipmentList);
	}

	public Equipment getSelectedEquipmentCB() {
		return Utility.getEquipment(climbSafe, equipmentMenuCB.getValue());
	}

	// Event Listener on Button[#addEquipmentToBundleButton].onAction
	@FXML
	public void addEquipmentToBundle(ActionEvent event) {
		Equipment equipment = this.getSelectedEquipmentCB();
		int quantity = Integer.parseInt(this.equipmentQuantityInputCB.getText());
		this.equipmentNamesCB.add(equipment.getName());
		this.equipmentQuantitiesCB.add(quantity);
	}

	// Event Listener on Button[#createEquipmentBundleButton].onAction
	@FXML
	public void createEquipmentBundle(ActionEvent event) {
		try {
			String bundleName = this.bundleNameInput.getText();
			int discount = Integer.parseInt(this.guideDiscountCB.getText());
			if (bundleName == null || bundleName.trim().isEmpty()) {
				ViewUtils.showError("Please input a valid bundle name");
			} 
			if (this.guideDiscountCB.getText() == null ||  bundleName.trim().isEmpty()) {
				ViewUtils.showError("Please input a valid discount number");
			}
			else {
				if (successful(() -> ClimbSafeFeatureSet5Controller.addEquipmentBundle(bundleName, discount,
						this.equipmentNamesCB, this.equipmentQuantitiesCB))) {
					
				}
			}
		} catch (NumberFormatException e) {
			ViewUtils.showError("Please input a valid number");
		}
	}

	// Edit Bundle Methods

	@FXML
	public void initializeSelectBundleMenu() {
		for (EquipmentBundle bundle : climbSafe.getBundles()) {
			bundlesList.add(bundle.getName());
		}
		selectBundleMenu.setItems(bundlesList);
	}

	public EquipmentBundle getSelectedBundle() {
		return Utility.getBundle(climbSafe, selectBundleMenu.getValue());
	}

	@FXML
	public void initializeEquipmentMenuEB() {
		for (Equipment equipment : climbSafe.getEquipment()) {
			bundleEquipmentList.add(equipment.getName());
		}
		selectBundleMenu.setItems(bundleEquipmentList);
	}

	// Event Listener on Button[#updateEquipmentInBundleButton].onAction
	@FXML
	public void updateEquipmentInBundle(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button[#updateEquipmentBundleButton].onAction
	@FXML
	public void updateEquipmentBundle(ActionEvent event) {
		// TODO Autogenerated
	}

}
